library(tidyverse)
library(ggplot2)
library(dplyr)
library(reshape2)
library(lubridate)
library(sf)
library(raster)
library(ggplot2)
library(incidence)
library(plotly)
library(leaflet)
#read the main police incident database
police_incident <- read_csv("Police_Incident_Data.csv")
head(police_incident)
censusPopData <- read_csv('Census_2020_Tract_Populations.csv')
head(censusPopData)
colnames(censusPopData)[3] <- "TRACT_ID"
censusIncData <- read_csv('2020_Median_Income.csv')
head(censusIncData)
#merge the income and population data
censusData <- merge(censusPopData,censusIncData,by="TRACT_ID")
head(censusData)
## Make shape file for Census Population
censusPopShp <- read_sf("Census 2020 Tract Populations/geo_export_6ea9b8b9-f93b-41bd-8242-39b59cd81ddc.shp")
head(censusPopShp)
## Make shape file for 2017 Median Income
censusIncShp <- read_sf("2020 Median Income/geo_export_43a087a5-8ff8-4733-9a99-dd658a9c17f4.shp")
censusIncShp <- censusIncShp %>%
rename(tract = tract_id)
head(censusIncShp)
## Merge our Shape Files to one big shape file
censusDataShp <- st_join(censusIncShp, censusPopShp)
sf::sf_use_s2(FALSE)
censusDataShp <- st_join(censusIncShp, censusPopShp)
head(censusDataShp)
plot(censusDataShp)
censusDataShp[is.na(censusDataShp)] <- 0
head(censusDataShp)
## Plot in ggplot
ggplot() +
geom_sf(data = censusDataShp, aes(fill=censusDataShp$median_inc)) +
theme_classic() +
theme_dark()
## Make Plot for population:
ggplot(censusDataShp) +
geom_sf(aes(fill = total_popu, color = "red"))
##Remove the Time Stamps from the Date Incidents
police_incident$Date_Incident <- str_sub(police_incident$Date_Incident, 1, nchar(police_incident$Date_Incident)-12)
head(police_incident)
##Make Incident Dates date type
police_incident$Date_Incident <- as.Date(police_incident$Date_Incident, format = "%m/%d/%Y")
head(police_incident)
#plot number of incident by date
police_incident_by_date <- police_incident %>% group_by(Date_Incident) %>% summarise(frequency = n())
p <- ggplot(police_incident_by_date, aes(x = police_incident_by_date$Date_Incident, y = police_incident_by_date$frequency)) + geom_col(fill="#BE93D4") + geom_smooth() + xlab("Year") + ylab("Number of Incident")
ggplotly(p)
#plot number of incident by month
police_incident_by_month <- police_incident_by_date %>% group_by(Date_Incident=floor_date(Date_Incident, "month")) %>%
summarize(frequency=sum(frequency))
p <- ggplot(police_incident_by_month, aes(x = police_incident_by_month$Date_Incident, y = police_incident_by_month$frequency)) + geom_col(fill="#BE93D4") + geom_smooth() + xlab("Month") + ylab("Number of Incident")
ggplotly(p)
#plot number of incident by year
police_incident_by_year <- police_incident_by_month %>% group_by(Date_Incident=floor_date(Date_Incident, "year")) %>%
summarize(frequency=sum(frequency))
p <- ggplot(police_incident_by_year, aes(x = police_incident_by_year$Date_Incident, y = police_incident_by_year$frequency)) + geom_col(fill="#BE93D4") + geom_smooth() + xlab("Year") + ylab("Number of Incident")
ggplotly(p)
#plot number of incident by year
police_incident_by_year <- police_incident_by_month %>% group_by(Date_Incident=floor_date(Date_Incident, "year")) %>%
summarize(frequency=sum(frequency))
p <- ggplot(police_incident_by_year, aes(x = police_incident_by_year$Date_Incident, y = police_incident_by_year$frequency)) + geom_col(fill="#BE93D4") + geom_smooth() + xlab("Year") + ylab("Number of Incident")
ggplotly(p)
#police incident number by incident type
police_incident_by_type <- police_incident %>% group_by(Incident_Type) %>% summarise(frequency = n())
police_incident_by_type$Incident_Type <- factor(police_incident_by_type$Incident_Type, levels = unique(police_incident_by_type$Incident_Type)[order(police_incident_by_type$frequency, decreasing = TRUE)])
p <- ggplot(police_incident_by_type, aes(x = police_incident_by_type$Incident_Type, y = police_incident_by_type$frequency)) + geom_col(fill="#BE93D4") + geom_smooth() + xlab("Type") + ylab("Number of Incident")
ggplotly(p)
#police incident number by incident description
police_incident_by_description <- police_incident %>% group_by(Incident_Description) %>% summarise(frequency = n())
police_incident_by_description$Incident_Description <- factor(police_incident_by_description$Incident_Description, levels = unique(police_incident_by_description$Incident_Description)[order(police_incident_by_description$frequency, decreasing = TRUE)])
p <- ggplot(police_incident_by_description, aes(x = police_incident_by_description$Incident_Description, y = police_incident_by_description$frequency)) + geom_col(fill="#BE93D4") + xlab("Description") + ylab("Number of Incident") + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
ggplotly(p)
#plot number of incident by specific month for 2020
police_incident_by_month <- police_incident_by_date %>% group_by(Date_Incident=floor_date(Date_Incident, "month")) %>% summarize(frequency=sum(frequency))
police_incident_by_month_spec <- police_incident_by_month[police_incident_by_month$Date_Incident >= "2020-01-01" & police_incident_by_month$Date_Incident <= "2020-12-31",]
p <- ggplot(police_incident_by_month_spec, aes(x = police_incident_by_month_spec$Date_Incident, y = police_incident_by_month_spec$frequency)) + geom_col(fill="#BE93D4") + geom_smooth() + xlab("Month") + ylab("Number of Incident")
ggplotly(p)
